@page
@model Ignis.Areas.Identity.Pages.Users.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<!-- <p>
    <a asp-page="Create">Create New</a>
</p> -->
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Filter: <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.ApplicationUser[0].Name)
                </a>
            </th>
            <th>
               
                @Html.DisplayNameFor(model => model.ApplicationUser[0].DOB)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApplicationUser[0].UserName)
            </th>
            <th>
               
                @Html.DisplayNameFor(model => model.ApplicationUser[0].Email)
                
            </th>
            <th>
                 <a asp-page="./Index" asp-route-sortOrder="@Model.RoleSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                Type of user
                 </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ApplicationUser) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DOB)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @if(!string.IsNullOrEmpty(item.Role))
                {
                    @Html.DisplayFor(modelItem => item.Role)
                }
                else
                {
                    <text>-- Select Role --</text>
                }
            </td>
            <td>
                <a asp-page="./Profile" asp-route-id="@item.Id">Profile</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.ApplicationUser.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.ApplicationUser.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.ApplicationUser.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.ApplicationUser.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>